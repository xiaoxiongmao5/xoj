-- MySQL dump 10.13  Distrib 8.0.40, for Linux (x86_64)
--
-- Host: localhost    Database: xoj
-- ------------------------------------------------------
-- Server version	8.0.40

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `xoj`
--

CREATE DATABASE /*!32312 IF NOT EXISTS*/ `xoj` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */;

USE `xoj`;

--
-- Table structure for table `question`
--

DROP TABLE IF EXISTS `question`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `question` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `title` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '标题',
  `content` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT '内容',
  `tags` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '标签列表（json 数组）',
  `answer` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT '题目答案',
  `submitNum` int NOT NULL DEFAULT '0' COMMENT '题目提交数',
  `acceptedNum` int NOT NULL DEFAULT '0' COMMENT '题目通过数',
  `judgeCase` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT '判题用例（json 数组）',
  `judgeConfig` text CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci COMMENT '判题配置（json 对象）',
  `thumbNum` int NOT NULL DEFAULT '0' COMMENT '点赞数',
  `favourNum` int NOT NULL DEFAULT '0' COMMENT '收藏数',
  `userId` bigint NOT NULL COMMENT '创建用户 id',
  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `isDelete` tinyint NOT NULL DEFAULT '0' COMMENT '是否删除',
  `answerTemplate` longtext COLLATE utf8mb4_unicode_ci,
  PRIMARY KEY (`id`),
  KEY `idx_userId` (`userId`),
  KEY `question_userId` (`userId`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='题目';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question`
--

LOCK TABLES `question` WRITE;
/*!40000 ALTER TABLE `question` DISABLE KEYS */;
INSERT INTO `question` VALUES (1,'两数之和','给定一个整数数组 `nums` 和一个整数目标值 `target`，请你在该数组中找出 **和为目标值** `target` 的那 **两个** 整数，并返回它们的数组下标。\n\n你可以假设每种输入只会对应一个答案，并且你不能使用两次相同的元素。\n\n你可以按任意顺序返回答案。\n\n\n**示例 1：**\n\n**输入：** nums = [2,7,11,15], target = 9\n**输出：** [0,1]\n**解释：** 因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。\n\n**示例 2：**\n\n**输入：** nums = [3,2,4], target = 6\n**输出：** [1,2]\n\n**示例 3：**\n\n**输入：** nums = [3,3], target = 6\n**输出：** [0,1]\n\n\n**提示：**\n\n*   `2 <= nums.length <= 10^4`\n*   `-10^9 <= nums[i] <= 10^9`\n*   `-10^9 <= target <= 10^9`\n*   **只会存在一个有效答案**\n\n\n**进阶：** 你可以想出一个时间复杂度小于 `O(n^2)` 的算法吗？\n','[\"简单\",\"数学\"]','```go\npackage main\n\nimport (\n	\"encoding/json\"\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc twoSum(nums []int, target int) []int {\n	for i, x := range nums {\n		for j := i + 1; j < len(nums); j++ {\n			if x+nums[j] == target {\n				return []int{i, j}\n			}\n		}\n	}\n	return nil\n}\n\nfunc main() {\n	a := []int{}\n	json.Unmarshal([]byte(os.Args[1]), &a)\n	b, _ := strconv.Atoi(os.Args[2])\n	ret := twoSum(a, b)\n	fmt.Printf(\"%v\", ret)\n}\n\n```',26,10,'[{\"input\":\"[2,7,11,15] 9\",\"output\":\"[0 1]\"},{\"input\":\"[3,2,4] 6\",\"output\":\"[1 2]\"},{\"input\":\"[3,3] 6\",\"output\":\"[0 1]\"},{\"input\":\"[1,2,3] 111\",\"output\":\"[]\"}]','{\"timeLimit\":1000,\"memoryLimit\":10000,\"stackLimit\":1000}',0,0,1,'2023-09-27 14:53:10','2024-11-27 01:46:14',0,'{\n\"go\":\"package main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n\\t\\\"os\\\"\\n\\t\\\"strconv\\\"\\n)\\n\\nfunc twoSum(nums []int, target int) []int {\\n\\t// 实现代码\\n}\\n\\nfunc main() {\\n\\ta := strings.Split(os.Args[1], \\\" \\\")\\n\\tb, _ := strconv.Atoi(os.Args[1])\\n\\tret := twoSum(a, b)\\n\\tfmt.Printf(\\\"%s\\\", strings.Joins(ret))\\n}\\n\",\n\"java\":\"暂不支持\"\n}'),(2,'无重复字符的最长子串','给定一个字符串 s ，请你找出其中不含有重复字符的**最长**子串的长度。\n\n**示例 1:**\n> 输入: s = \"abcabcbb\"  \n> 输出: 3   \n> 解释: 因为无重复字符的最长子串是 \"abc\"，所以其长度为 3。 \n\n**示例 2:**\n> 输入: s = \"bbbbb\"   \n> 输出: 1   \n> 解释: 因为无重复字符的最长子串是 \"b\"，所以其长度为 1。   \n\n**示例 3:**\n\n> 输入: s = \"pwwkew\"   \n> 输出: 3   \n> 解释: 因为无重复字符的最长子串是 \"wke\"，所以其长度为 3。   \n>     请注意，你的答案必须是 子串 的长度，\"pwke\" 是一个子序列，不是子串。\n \n\n**提示：**\n\n* 0 <= s.length <= 5 * 104\n* s 由英文字母、数字、符号和空格组成','[\"中等\",\"字符串\"]','```go\npackage main\n\nimport (\n	\"fmt\"\n	\"os\"\n)\n\nfunc lengthOfLongestSubstring(s string) int {\n	// 哈希集合，记录每个字符是否出现过\n	m := map[byte]int{}\n	n := len(s)\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\n	rk, ans := -1, 0\n	for i := 0; i < n; i++ {\n		if i != 0 {\n			// 左指针向右移动一格，移除一个字符\n			delete(m, s[i-1])\n		}\n		for rk+1 < n && m[s[rk+1]] == 0 {\n			// 不断地移动右指针\n			m[s[rk+1]]++\n			rk++\n		}\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\n		ans = max(ans, rk-i+1)\n	}\n	return ans\n}\n\nfunc max(x, y int) int {\n	if x < y {\n		return y\n	}\n	return x\n}\n\nfunc main() {\n	ret := lengthOfLongestSubstring(os.Args[1])\n	fmt.Printf(\"%d\", ret)\n}\n```',6,1,'[{\"input\":\"abcabcbb\",\"output\":\"3\"},{\"input\":\"bbbbb\",\"output\":\"1\"},{\"input\":\"pwwkew\",\"output\":\"3\"},{\"input\":\"1234567\",\"output\":\"7\"}]','{\"timeLimit\":100,\"memoryLimit\":10000,\"stackLimit\":100}',0,0,2,'2024-11-26 14:20:11','2024-11-27 02:37:57',0,'{\n\"go\":\"package main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n\\t\\\"os\\\"\\n)\\n\\nfunc lengthOfLongestSubstring(s string) int {\\n\\t// 编写代码\\n}\\n\\nfunc main() {\\n\\tret := lengthOfLongestSubstring(os.Args[1])\\n\\tfmt.Printf(\\\"%d\\\", ret)\\n}\\n\",\n\"java\":\"暂不支持\"\n}'),(3,'回文数','给你一个整数 x ，如果 x 是一个回文整数，返回 true ；否则，返回 false 。\n`回文数`是指正序（从左向右）和倒序（从右向左）读都是一样的整数。\n\n* 例如，121 是回文，而 123 不是。\n \n\n**示例 1：**\n\n> 输入：x = 121    \n> 输出：true   \n\n**示例 2：**\n> 输入：x = -121   \n> 输出：false   \n> 解释：从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。\n\n**示例 3：**\n\n> 输入：x = 10   \n> 输出：false   \n> 解释：从右向左读, 为 01 。因此它不是一个回文数。   \n \n\n**提示：**\n\n* -231 <= x <= 231 - 1\n \n\n进阶：你能不将整数转为字符串来解决这个问题吗？','[\"困难\",\"数学\"]','```go\npackage main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc isPalindrome(x int) bool {\n	// 特殊情况：\n	// 如上所述，当 x < 0 时，x 不是回文数。\n	// 同样地，如果数字的最后一位是 0，为了使该数字为回文，\n	// 则其第一位数字也应该是 0\n	// 只有 0 满足这一属性\n	if x < 0 || (x%10 == 0 && x != 0) {\n		return false\n	}\n\n	revertedNumber := 0\n	for x > revertedNumber {\n		revertedNumber = revertedNumber*10 + x%10\n		x /= 10\n	}\n\n	// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。\n	// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，\n	// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。\n	return x == revertedNumber || x == revertedNumber/10\n}\n\nfunc main() {\n	a, _ := strconv.Atoi(os.Args[1])\n	ret := isPalindrome(a)\n	fmt.Printf(\"%v\", ret)\n}\n```\n',2,2,'[{\"input\":\"121\",\"output\":\"true\"},{\"input\":\"-121\",\"output\":\"false\"},{\"input\":\"113\",\"output\":\"false\"},{\"input\":\"111133\",\"output\":\"false\"}]','{\"timeLimit\":1000,\"memoryLimit\":10000,\"stackLimit\":1000}',0,0,13,'2024-11-26 14:55:34','2024-11-27 02:42:04',0,'{\n\"go\":\"package main\\n\\nimport (\\n\\t\\\"fmt\\\"\\n\\t\\\"os\\\"\\n\\t\\\"strconv\\\"\\n)\\n\\nfunc isPalindrome(x int) bool {\\n\\t// 编写代码\\n}\\n\\nfunc main() {\\n\\ta, _ := strconv.Atoi(os.Args[1])\\n\\tret := isPalindrome(a)\\n\\tfmt.Printf(\\\"%v\\\", ret)\\n}\\n\",\n\"java\":\"暂不支持\"\n}'),(4,'b+4','abcdefg','[\"二叉树\",\"困难\"]','a+b=c',0,0,'[{\"input\":\"100\",\"output\":\"200\"},{\"input\":\"300\",\"output\":\"400\"}]','{\"timeLimit\":100,\"memoryLimit\":100,\"stackLimit\":100}',0,0,6,'2023-09-27 17:29:11','2024-11-26 13:48:06',1,NULL),(5,'b+5','abcdefg','[\"堆\",\"简单\"]','a+b=c',0,0,'[{\"input\":\"1\",\"output\":\"2\"},{\"input\":\"3\",\"output\":\"4\"}]','{\"timeLimit\":100,\"memoryLimit\":100,\"stackLimit\":100}',0,0,2,'2023-09-27 17:30:14','2024-11-26 13:48:08',1,NULL),(6,'b+6','abcdefg','[\"堆\",\"困难\"]','a+b=c',0,0,'[{\"input\":\"1\",\"output\":\"2\"},{\"input\":\"3\",\"output\":\"4\"}]','{\"timeLimit\":100,\"memoryLimit\":100,\"stackLimit\":100}',0,0,3,'2023-09-27 17:34:17','2024-11-26 13:48:10',1,NULL),(7,'b+7','abcdefg','[\"二叉树\",\"困难\"]','a+b=c',0,0,'[{\"input\":\"100\",\"output\":\"200\"},{\"input\":\"300\",\"output\":\"400\"}]','{\"timeLimit\":100,\"memoryLimit\":100,\"stackLimit\":100}',0,0,3,'2023-09-27 17:37:32','2023-10-10 09:52:59',1,NULL),(8,'问题标题','问题内容','[\"标签1\",\"标签2\"]','问题答案',0,0,'[]','{\"timeLimit\":0,\"memoryLimit\":0,\"stackLimit\":0}',0,0,6,'2023-09-29 13:31:47','2023-09-29 13:31:59',1,NULL),(9,'题目9','## 内容\n给你一个字符串表达式 s ，请你实现一个基本计算器来计算并返回它的值。\n\n整数除法仅保留整数部分。\n\n你可以假设给定的表达式总是有效的。所有中间结果将在 [-231, 231 - 1] 的范围内。\n\n注意：不允许使用任何将字符串作为数学表达式计算的内置函数，比如 eval() 。\n\n \n\n### 示例 1：\n\n> 输入：s = \"3+2*2\"\n输出：7\n\n### 示例 2：\n\n> 输入：s = \" 3/2 \"\n输出：1\n\n### 示例 3：\n\n> 输入：s = \" 3+5 / 2 \"\n输出：5\n \n\n提示：\n\n* 1 <= s.length <= 3 * 105\n* s 由整数和算符 (\'+\', \'-\', \'*\', \'/\') 组成，中间由一些空格隔开\n* s 表示一个 有效表达式\n* 表达式中的所有整数都是非负整数，且在范围 [0, 231 - 1] 内\n* 题目数据保证答案是一个 32-bit 整数','[\"二叉树\",\"简单\"]','答案',0,0,'[{\"input\":\"\\\"3+2*2\\\"\",\"output\":\"7\"},{\"input\":\"s = \\\" 3/2 \\\"\",\"output\":\"1\"},{\"input\":\"s = \\\" 3+5 / 2 \\\"\",\"output\":\"5\"}]','{\"timeLimit\":1000,\"memoryLimit\":2000,\"stackLimit\":1000}',0,0,12,'2023-09-30 15:42:29','2024-11-26 13:48:13',1,NULL),(10,'',' nums  target','[\"\", \"\", \"\"]','class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums.length; i++) {\n            int complement = target - nums[i];\n            if (map.containsKey(complement)) {\n                return new int[] { map.get(complement), i };\n            }\n            map.put(nums[i], i);\n        }\n        throw new IllegalArgumentException(\"No solution\");\n    }\n}',156,89,'[{\"input\": \"[2,7,11,15]\\n9\", \"output\": \"[0,1]\"}, {\"input\": \"[3,2,4]\\n6\", \"output\": \"[1,2]\"}, {\"input\": \"[3,3]\\n6\", \"output\": \"[0,1]\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',45,20,1,'2024-11-26 13:35:54','2024-11-26 13:41:43',1,'class Solution {\n    public int[] twoSum(int[] nums, int target) {\n        // \n    }\n}'),(11,'','','[\"\", \"\"]','class Solution {\n    public boolean isPalindrome(int x) {\n        if (x < 0) return false;\n        int reversed = 0, original = x;\n        while (x != 0) {\n            reversed = reversed * 10 + x % 10;\n            x /= 10;\n        }\n        return original == reversed;\n    }\n}',203,145,'[{\"input\": \"121\", \"output\": \"true\"}, {\"input\": \"-121\", \"output\": \"false\"}, {\"input\": \"10\", \"output\": \"false\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',67,35,1,'2024-11-26 13:35:54','2024-11-26 13:41:44',1,'class Solution {\n    public boolean isPalindrome(int x) {\n        // \n    }\n}'),(12,'',' n Fibonacci n  F(N)F(0) = 0, F(1) = 1, F(N) = F(N - 1) + F(N - 2),  N > 1','[\"\", \"\", \"\"]','class Solution {\n    public int fib(int n) {\n        if (n <= 1) return n;\n        int a = 0, b = 1;\n        for (int i = 2; i <= n; i++) {\n            int sum = a + b;\n            a = b;\n            b = sum;\n        }\n        return b;\n    }\n}',178,132,'[{\"input\": \"2\", \"output\": \"1\"}, {\"input\": \"3\", \"output\": \"2\"}, {\"input\": \"4\", \"output\": \"3\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',89,56,1,'2024-11-26 13:35:54','2024-11-26 13:41:45',1,'class Solution {\n    public int fib(int n) {\n        // \n    }\n}'),(13,'','','[\"\", \"\", \"\", \"\"]','class Solution {\n    public int[] bubbleSort(int[] arr) {\n        int n = arr.length;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = 0; j < n - i - 1; j++) {\n                if (arr[j] > arr[j + 1]) {\n                    int temp = arr[j];\n                    arr[j] = arr[j + 1];\n                    arr[j + 1] = temp;\n                }\n            }\n        }\n        return arr;\n    }\n}',145,98,'[{\"input\": \"[64,34,25,12,22,11,90]\", \"output\": \"[11,12,22,25,34,64,90]\"}, {\"input\": \"[5,2,8,12,1,3]\", \"output\": \"[1,2,3,5,8,12]\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',42,28,1,'2024-11-26 13:35:54','2024-11-26 13:41:49',1,'class Solution {\n    public int[] bubbleSort(int[] arr) {\n        // \n    }\n}'),(14,'两数之和','给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素在答案里不能重复出现。','[\"数组\", \"哈希表\", \"简单\"]','func twoSum(nums []int, target int) []int {\n    numMap := make(map[int]int)\n    for i, num := range nums {\n        if j, exists := numMap[target-num]; exists {\n            return []int{j, i}\n        }\n        numMap[num] = i\n    }\n    return nil\n}',1,0,'[{\"input\": \"[2,7,11,15]\n9\", \"output\": \"[0,1]\"}, {\"input\": \"[3,2,4]\n6\", \"output\": \"[1,2]\"}, {\"input\": \"[3,3]\n6\", \"output\": \"[0,1]\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',0,0,1,'2024-11-26 13:46:14','2024-11-26 14:56:29',1,'func twoSum(nums []int, target int) []int {\n    // 在此处编写代码\n}'),(15,'字符串反转','编写一个函数，其作用是将输入的字符串反转过来。输入字符串以字符数组 s 的形式给出。','[\"字符串\", \"双指针\", \"简单\"]','func reverseString(s []byte) {\n    for i, j := 0, len(s)-1; i < j; i, j = i+1, j-1 {\n        s[i], s[j] = s[j], s[i]\n    }\n}',0,0,'[{\"input\": \"[\\\"h\\\",\\\"e\\\",\\\"l\\\",\\\"l\\\",\\\"o\\\"]\", \"output\": \"[\\\"o\\\",\\\"l\\\",\\\"l\\\",\\\"e\\\",\\\"h\\\"]\"}, {\"input\": \"[\\\"H\\\",\\\"a\\\",\\\"n\\\",\\\"n\\\",\\\"a\\\",\\\"h\\\"]\", \"output\": \"[\\\"h\\\",\\\"a\\\",\\\"n\\\",\\\"n\\\",\\\"a\\\",\\\"H\\\"]\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',0,0,1,'2024-11-26 13:46:14','2024-11-26 14:48:52',1,'func reverseString(s []byte) {\n    // 在此处编写代码\n}'),(16,'合并两个有序数组','给你两个按非递减顺序排列的整数数组 nums1 和 nums2，另有两个整数 m 和 n ，分别表示 nums1 和 nums2 中的元素数目。请你合并 nums2 到 nums1 中，使合并后的数组同样按非递减顺序排列。','[\"数组\", \"双指针\", \"排序\", \"中等\"]','func merge(nums1 []int, m int, nums2 []int, n int) {\n    p1, p2, p := m-1, n-1, m+n-1\n    for p2 >= 0 {\n        if p1 >= 0 && nums1[p1] > nums2[p2] {\n            nums1[p] = nums1[p1]\n            p1--\n        } else {\n            nums1[p] = nums2[p2]\n            p2--\n        }\n        p--\n    }\n}',0,0,'[{\"input\": \"[1,2,3,0,0,0]\n3\n[2,5,6]\n3\", \"output\": \"[1,2,2,3,5,6]\"}, {\"input\": \"[1]\n1\n[]\n0\", \"output\": \"[1]\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',0,0,1,'2024-11-26 13:46:14','2024-11-26 14:48:50',1,'func merge(nums1 []int, m int, nums2 []int, n int) {\n    // 在此处编写代码\n}'),(17,'二分查找','给定一个 n 个元素有序的（升序）整型数组 nums 和一个目标值 target，写一个函数搜索 nums 中的 target，如果目标值存在返回下标，否则返回 -1。','[\"数组\", \"二分查找\", \"简单\"]','func search(nums []int, target int) int {\n    left, right := 0, len(nums)-1\n    for left <= right {\n        mid := left + (right-left)/2\n        if nums[mid] == target {\n            return mid\n        } else if nums[mid] < target {\n            left = mid + 1\n        } else {\n            right = mid - 1\n        }\n    }\n    return -1\n}',0,0,'[{\"input\": \"[-1,0,3,5,9,12]\n9\", \"output\": \"4\"}, {\"input\": \"[-1,0,3,5,9,12]\n2\", \"output\": \"-1\"}]','{\"timeLimit\": 1000, \"memoryLimit\": 256, \"stackLimit\": 256}',0,0,1,'2024-11-26 13:46:14','2024-11-26 14:48:49',1,'func search(nums []int, target int) int {\n    // 在此处编写代码\n}');
/*!40000 ALTER TABLE `question` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `question_submit`
--

DROP TABLE IF EXISTS `question_submit`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `question_submit` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `language` varchar(128) NOT NULL COMMENT '编程语言',
  `code` text NOT NULL COMMENT '用户代码',
  `judgeInfo` text COMMENT '判题信息（json 对象）',
  `status` int NOT NULL DEFAULT '0' COMMENT '判题状态（0 - 待判题、1 - 判题中、2 - 成功、3 - 失败）',
  `questionId` bigint NOT NULL COMMENT '题目 id',
  `userId` bigint NOT NULL COMMENT '创建用户 id',
  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `isDelete` tinyint NOT NULL DEFAULT '0' COMMENT '是否删除',
  PRIMARY KEY (`id`),
  KEY `idx_questionId` (`questionId`),
  KEY `idx_userId` (`userId`),
  KEY `question_submit_questionId` (`questionId`),
  KEY `question_submit_userId` (`userId`)
) ENGINE=InnoDB AUTO_INCREMENT=45 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci COMMENT='题目提交';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `question_submit`
--

LOCK TABLES `question_submit` WRITE;
/*!40000 ALTER TABLE `question_submit` DISABLE KEYS */;
INSERT INTO `question_submit` VALUES (1,'go','a+b=2','{\"message\":\"\",\"memory\":1404,\"time\":0}',0,4,6,'2023-09-29 14:55:17','2023-10-10 21:16:09',0),(2,'go','a+b=2','{\"message\":\"Wrong Answer\",\"memory\":10000,\"time\":100}',2,4,6,'2023-09-29 15:12:05','2023-10-10 21:16:12',0),(3,'go','func main() {\n\n    fmt.Printf(\"ok\")\n}','{\"message\":\"Compile Error\",\"memory\":203,\"time\":0}',2,9,12,'2023-10-01 10:01:13','2023-10-10 21:16:16',0),(4,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n)\n\nfunc main() {\n	a, _ := os.Args[1]\n	b, _ := os.Args[2]\n	fmt.Printf(\"%d\", a+b)\n}','{\"message\":\"Compile Error\",\"memory\":5000,\"time\":0}',2,1,12,'2023-10-09 10:19:51','2023-10-10 21:16:21',0),(5,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	targs := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{}',3,1,12,'2023-10-09 10:52:06','2023-10-09 21:44:05',0),(6,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":1250,\"time\":403}',1,1,12,'2023-10-09 10:57:19','2023-10-10 21:16:30',0),(7,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	targs := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Compile Error\",\"memory\":12241024,\"time\":0}',2,1,12,'2023-10-09 11:13:38','2023-10-10 21:16:43',0),(8,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Time Limit Exceeded\",\"memory\":5360,\"time\":650}',2,1,12,'2023-10-09 11:14:44','2023-10-10 21:16:54',0),(9,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Memory Limit Exceeded\",\"memory\":1785856,\"time\":31}',2,1,12,'2023-10-09 11:16:00','2023-10-09 12:19:02',0),(10,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":0,\"time\":60001}',2,1,12,'2023-10-10 08:21:03','2023-10-10 21:33:17',0),(11,'go','','{\"message\":\"Compile Error\",\"memory\":0,\"time\":0}',2,1,12,'2023-10-10 08:38:13','2023-10-10 08:38:25',0),(12,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":1200,\"time\":10000}',2,1,12,'2023-10-10 12:28:15','2023-10-10 21:23:49',0),(13,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":500,\"time\":11}',2,1,12,'2023-10-10 12:32:54','2023-10-10 21:17:29',0),(14,'go','serfasd','{\"message\":\"Compile Error\",\"memory\":0,\"time\":0}',2,1,12,'2023-10-10 12:55:18','2023-10-10 12:55:32',0),(15,'go','dfgsad','{\"message\":\"Compile Error\",\"memory\":0,\"time\":0}',2,1,12,'2023-10-10 13:43:47','2023-10-10 13:44:01',0),(16,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":0,\"time\":9}',2,1,12,'2023-10-10 13:45:34','2023-10-10 13:46:07',0),(17,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":0,\"time\":6}',2,1,12,'2023-10-10 13:50:43','2023-10-10 13:51:17',0),(18,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":0,\"time\":44}',2,1,12,'2023-10-10 15:26:40','2023-10-10 15:27:15',0),(19,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"memory\":0,\"time\":5}',2,1,12,'2023-10-10 15:37:22','2023-10-10 15:37:55',0),(20,'go','sdfasd','{\"message\":\"Compile Error\",\"memory\":0,\"time\":0}',2,1,12,'2023-10-10 15:38:29','2023-10-10 15:38:41',0),(21,'go','asdafsds','{\"message\":\"Compile Error\",\"memory\":0,\"time\":0}',2,1,12,'2023-10-11 04:15:26','2023-10-11 04:15:40',0),(22,'go','sdafsd','{\"message\":\"Compile Error\",\"memory\":0,\"time\":0}',2,1,12,'2023-10-11 09:05:08','2023-10-11 09:05:09',0),(23,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Memory Limit Exceeded\",\"detail\":\"实际使用内存=[2932736]byte, 内存限制=[100]KB\",\"memory\":2932736,\"time\":57}',2,1,13,'2024-11-26 07:20:54','2024-11-26 07:21:18',0),(24,'go','package main\n\nimport (\n	\"fmt\"\n	\"os\"\n	\"strconv\"\n)\n\nfunc main() {\n	args := os.Args[1:]\n	a, _ := strconv.Atoi(args[0])\n	b, _ := strconv.Atoi(args[1])\n	fmt.Printf(\"%d\", a+b)\n}\n','{\"message\":\"Accepted\",\"detail\":\"Accepted\",\"memory\":1511424,\"time\":62}',2,1,13,'2024-11-26 07:21:49','2024-11-26 07:22:07',0),(25,'go','func twoSum(nums []int, target int) []int { numMap := make(map[int]int) for i, num := range nums { if j, exists := numMap[target-num]; exists { return []int{j, i} } numMap[num] = i } return nil }','{\"message\":\"System Error\",\"detail\":\"invalid character \'\\\\n\' in string literal\",\"memory\":0,\"time\":0}',3,14,13,'2024-11-26 13:46:42','2024-11-26 13:46:43',0),(26,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n    for i, x := range nums {\r\n        for j := i + 1; j < len(nums); j++ {\r\n            if x+nums[j] == target {\r\n                return []int{i, j}\r\n            }\r\n        }\r\n    }\r\n    return nil\r\n}\r\n\r\nfunc main() {\r\n    a := strings.Split(os.Args[1], \" \")\r\n    b, _ := strconv.Atoi(os.Args[1])\r\n    ret := twoSum(a, b)\r\n    fmt.Printf(\"%s\", strings.Joins(ret))\r\n}','{\"message\":\"Compile Error\",\"detail\":\"编译失败 : exit status 1. # command-line-arguments\\ntmpcode/b731cb1b-45ae-454f-9c9b-8220252aa20e/main.go:21:10: undefined: strings\\ntmpcode/b731cb1b-45ae-454f-9c9b-8220252aa20e/main.go:24:22: undefined: strings\\n\",\"memory\":0,\"time\":0}',2,1,13,'2024-11-26 14:13:38','2024-11-26 14:13:39',0),(27,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n    \"strings\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n    for i, x := range nums {\r\n        for j := i + 1; j < len(nums); j++ {\r\n            if x+nums[j] == target {\r\n                return []int{i, j}\r\n            }\r\n        }\r\n    }\r\n    return nil\r\n}\r\n\r\nfunc main() {\r\n    a := strings.Split(os.Args[1], \" \")\r\n    b, _ := strconv.Atoi(os.Args[1])\r\n    ret := twoSum(a, b)\r\n    fmt.Printf(\"%s\", strings.Joins(ret))\r\n}','{\"message\":\"Compile Error\",\"detail\":\"编译失败 : exit status 1. # command-line-arguments\\ntmpcode/cdd12f5d-e762-4670-b330-a2a25c96f4eb/main.go:24:19: cannot use a (variable of type []string) as []int value in argument to twoSum\\ntmpcode/cdd12f5d-e762-4670-b330-a2a25c96f4eb/main.go:25:30: undefined: strings.Joins\\n\",\"memory\":0,\"time\":0}',2,1,13,'2024-11-26 14:13:58','2024-11-26 14:13:59',0),(28,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n    \"strings\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n    for i, x := range nums {\r\n        for j := i + 1; j < len(nums); j++ {\r\n            if x+nums[j] == target {\r\n                return []int{i, j}\r\n            }\r\n        }\r\n    }\r\n    return nil\r\n}\r\n\r\nfunc parseIntArr(str string)[]int{\r\n    var numbers []int\r\n    arr := strings.Split(str, \" \")\r\n    for _, s := range strings.Fields(arr) {\r\n        num, _ := strconv.Atoi(s)\r\n        numbers = append(numbers, num)\r\n    }\r\n    \r\n    return numbers\r\n}\r\n\r\nfunc main() {\r\n    a := parseIntArr(os.Args[1])\r\n    b, _ := strconv.Atoi(os.Args[1])\r\n    ret := twoSum(a, b)\r\n    fmt.Printf(\"%s\", strings.Joins(ret))\r\n}','{\"message\":\"Compile Error\",\"detail\":\"编译失败 : exit status 1. # command-line-arguments\\ntmpcode/3fe130a3-6c0f-43aa-9be4-b756b5b74610/main.go:24:38: cannot use arr (variable of type []string) as string value in argument to strings.Fields\\ntmpcode/3fe130a3-6c0f-43aa-9be4-b756b5b74610/main.go:36:30: undefined: strings.Joins\\n\",\"memory\":0,\"time\":0}',2,1,13,'2024-11-26 14:17:35','2024-11-26 14:17:35',0),(29,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n	\"strings\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc parseIntArr(str string) []int {\r\n	var numbers []int\r\n	for _, s := range strings.Fields(str) {\r\n		num, _ := strconv.Atoi(s)\r\n		numbers = append(numbers, num)\r\n	}\r\n\r\n	return numbers\r\n}\r\n\r\nfunc main() {\r\n	a := parseIntArr(os.Args[1])\r\n	b, _ := strconv.Atoi(os.Args[1])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(strings.Trim(strings.Replace(fmt.Sprint(ret), \" \", \" \", -1), \"[]\"))\r\n}\r\n','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[1 2]时,预期结果=[3],你的结果=[]\",\"memory\":1601536,\"time\":66}',2,1,13,'2024-11-26 14:20:11','2024-11-26 14:20:29',0),(30,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n	\"strings\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}; json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Compile Error\",\"detail\":\"编译失败 : exit status 1. # command-line-arguments\\ntmpcode/52b6970c-d0f5-4632-93ce-b2f3ddc01070/main.go:7:2: \\\"strings\\\" imported and not used\\ntmpcode/52b6970c-d0f5-4632-93ce-b2f3ddc01070/main.go:22:16: undefined: json\\n\",\"memory\":0,\"time\":0}',2,1,13,'2024-11-26 14:26:29','2024-11-26 14:26:30',0),(31,'go','package main\r\n\r\nimport (\r\n	\"encoding/json\"\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}\r\n	json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[[2,7,11,15] 9]时,预期结果=[[2,7]],你的结果=[[0 1]]\",\"memory\":1409024,\"time\":53}',2,1,13,'2024-11-26 14:27:12','2024-11-26 14:27:25',0),(32,'go','package main\r\n\r\nimport (\r\n	\"encoding/json\"\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}\r\n	json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[[2,7,11,15] 9]时,预期结果=[[0,1]],你的结果=[[0 1]]\",\"memory\":1384448,\"time\":59}',2,1,13,'2024-11-26 14:28:06','2024-11-26 14:28:17',0),(33,'go','package main\r\n\r\nimport (\r\n	\"encoding/json\"\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}\r\n	json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Accepted\",\"detail\":\"Accepted\",\"memory\":1400832,\"time\":65}',2,1,13,'2024-11-26 14:28:56','2024-11-26 14:29:08',0),(34,'go','package main\r\n\r\nimport (\r\n	\"encoding/json\"\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}\r\n	json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[[3,2,4] 6]时,预期结果=[[]],你的结果=[[1 2]]\",\"memory\":1396736,\"time\":68}',2,1,13,'2024-11-26 14:33:27','2024-11-26 14:33:41',0),(35,'go','package main\r\n\r\nimport (\r\n	\"encoding/json\"\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}\r\n	json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[[3,2,4] 6]时,预期结果=[[1,2]],你的结果=[[1 2]]\",\"memory\":1650688,\"time\":68}',2,1,13,'2024-11-26 14:34:58','2024-11-26 14:35:17',0),(36,'go','package main\r\n\r\nimport (\r\n	\"encoding/json\"\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc twoSum(nums []int, target int) []int {\r\n	for i, x := range nums {\r\n		for j := i + 1; j < len(nums); j++ {\r\n			if x+nums[j] == target {\r\n				return []int{i, j}\r\n			}\r\n		}\r\n	}\r\n	return nil\r\n}\r\n\r\nfunc main() {\r\n	a := []int{}\r\n	json.Unmarshal([]byte(os.Args[1]), &a)\r\n	b, _ := strconv.Atoi(os.Args[2])\r\n	ret := twoSum(a, b)\r\n	fmt.Printf(\"%v\", ret)\r\n}\r\n','{\"message\":\"Accepted\",\"detail\":\"Accepted\",\"memory\":1576960,\"time\":67}',2,1,13,'2024-11-26 14:35:35','2024-11-26 14:35:54',0),(37,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n)\r\n\r\nfunc lengthOfLongestSubstring(s string) int {\r\n	// 哈希集合，记录每个字符是否出现过\r\n	m := map[byte]int{}\r\n	n := len(s)\r\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\r\n	rk, ans := -1, 0\r\n	for i := 0; i < n; i++ {\r\n		if i != 0 {\r\n			// 左指针向右移动一格，移除一个字符\r\n			delete(m, s[i-1])\r\n		}\r\n		for rk+1 < n && m[s[rk+1]] == 0 {\r\n			// 不断地移动右指针\r\n			m[s[rk+1]]++\r\n			rk++\r\n		}\r\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\r\n		ans = max(ans, rk-i+1)\r\n	}\r\n	return ans\r\n}\r\n\r\nfunc max(x, y int) int {\r\n	if x < y {\r\n		return y\r\n	}\r\n	return x\r\n}\r\n\r\nfunc main() {\r\n	ret := lengthOfLongestSubstring(os.Args[1])\r\n	fmt.Printf(\"%d\", ret)\r\n}','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[abcabcbb]时,预期结果=[2],你的结果=[3]\",\"memory\":1630208,\"time\":58}',2,2,13,'2024-11-26 14:44:11','2024-11-26 14:44:27',0),(38,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n)\r\n\r\nfunc lengthOfLongestSubstring(s string) int {\r\n	// 哈希集合，记录每个字符是否出现过\r\n	m := map[byte]int{}\r\n	n := len(s)\r\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\r\n	rk, ans := -1, 0\r\n	for i := 0; i < n; i++ {\r\n		if i != 0 {\r\n			// 左指针向右移动一格，移除一个字符\r\n			delete(m, s[i-1])\r\n		}\r\n		for rk+1 < n && m[s[rk+1]] == 0 {\r\n			// 不断地移动右指针\r\n			m[s[rk+1]]++\r\n			rk++\r\n		}\r\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\r\n		ans = max(ans, rk-i+1)\r\n	}\r\n	return ans\r\n}\r\n\r\nfunc max(x, y int) int {\r\n	if x < y {\r\n		return y\r\n	}\r\n	return x\r\n}\r\n\r\nfunc main() {\r\n	ret := lengthOfLongestSubstring(os.Args[1])\r\n	fmt.Printf(\"%d\", ret)\r\n}','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[bbbbb]时,预期结果=[4],你的结果=[1]\",\"memory\":1613824,\"time\":59}',2,2,13,'2024-11-26 14:44:45','2024-11-26 14:45:01',0),(39,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n)\r\n\r\nfunc lengthOfLongestSubstring(s string) int {\r\n	// 哈希集合，记录每个字符是否出现过\r\n	m := map[byte]int{}\r\n	n := len(s)\r\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\r\n	rk, ans := -1, 0\r\n	for i := 0; i < n; i++ {\r\n		if i != 0 {\r\n			// 左指针向右移动一格，移除一个字符\r\n			delete(m, s[i-1])\r\n		}\r\n		for rk+1 < n && m[s[rk+1]] == 0 {\r\n			// 不断地移动右指针\r\n			m[s[rk+1]]++\r\n			rk++\r\n		}\r\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\r\n		ans = max(ans, rk-i+1)\r\n	}\r\n	return ans\r\n}\r\n\r\nfunc max(x, y int) int {\r\n	if x < y {\r\n		return y\r\n	}\r\n	return x\r\n}\r\n\r\nfunc main() {\r\n	ret := lengthOfLongestSubstring(os.Args[1])\r\n	fmt.Printf(\"%d\", ret)\r\n}','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[pwwkew]时,预期结果=[1],你的结果=[3]\",\"memory\":1667072,\"time\":61}',2,2,13,'2024-11-26 14:45:23','2024-11-26 14:45:39',0),(40,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n)\r\n\r\nfunc lengthOfLongestSubstring(s string) int {\r\n	// 哈希集合，记录每个字符是否出现过\r\n	m := map[byte]int{}\r\n	n := len(s)\r\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\r\n	rk, ans := -1, 0\r\n	for i := 0; i < n; i++ {\r\n		if i != 0 {\r\n			// 左指针向右移动一格，移除一个字符\r\n			delete(m, s[i-1])\r\n		}\r\n		for rk+1 < n && m[s[rk+1]] == 0 {\r\n			// 不断地移动右指针\r\n			m[s[rk+1]]++\r\n			rk++\r\n		}\r\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\r\n		ans = max(ans, rk-i+1)\r\n	}\r\n	return ans\r\n}\r\n\r\nfunc max(x, y int) int {\r\n	if x < y {\r\n		return y\r\n	}\r\n	return x\r\n}\r\n\r\nfunc main() {\r\n	ret := lengthOfLongestSubstring(os.Args[1])\r\n	fmt.Printf(\"%d\", ret)\r\n}','{\"message\":\"Wrong Answer\",\"detail\":\"执行输出结果错误，输入=[1234567]时,预期结果=[1],你的结果=[7]\",\"memory\":1589248,\"time\":60}',2,2,13,'2024-11-26 14:46:12','2024-11-26 14:46:30',0),(41,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n)\r\n\r\nfunc lengthOfLongestSubstring(s string) int {\r\n	// 哈希集合，记录每个字符是否出现过\r\n	m := map[byte]int{}\r\n	n := len(s)\r\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\r\n	rk, ans := -1, 0\r\n	for i := 0; i < n; i++ {\r\n		if i != 0 {\r\n			// 左指针向右移动一格，移除一个字符\r\n			delete(m, s[i-1])\r\n		}\r\n		for rk+1 < n && m[s[rk+1]] == 0 {\r\n			// 不断地移动右指针\r\n			m[s[rk+1]]++\r\n			rk++\r\n		}\r\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\r\n		ans = max(ans, rk-i+1)\r\n	}\r\n	return ans\r\n}\r\n\r\nfunc max(x, y int) int {\r\n	if x < y {\r\n		return y\r\n	}\r\n	return x\r\n}\r\n\r\nfunc main() {\r\n	ret := lengthOfLongestSubstring(os.Args[1])\r\n	fmt.Printf(\"%d\", ret)\r\n}','{\"message\":\"Memory Limit Exceeded\",\"detail\":\"实际使用内存=[1642496]byte, 内存限制=[100]KB\",\"memory\":1642496,\"time\":65}',2,2,13,'2024-11-26 14:47:01','2024-11-26 14:47:19',0),(42,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n)\r\n\r\nfunc lengthOfLongestSubstring(s string) int {\r\n	// 哈希集合，记录每个字符是否出现过\r\n	m := map[byte]int{}\r\n	n := len(s)\r\n	// 右指针，初始值为 -1，相当于我们在字符串的左边界的左侧，还没有开始移动\r\n	rk, ans := -1, 0\r\n	for i := 0; i < n; i++ {\r\n		if i != 0 {\r\n			// 左指针向右移动一格，移除一个字符\r\n			delete(m, s[i-1])\r\n		}\r\n		for rk+1 < n && m[s[rk+1]] == 0 {\r\n			// 不断地移动右指针\r\n			m[s[rk+1]]++\r\n			rk++\r\n		}\r\n		// 第 i 到 rk 个字符是一个极长的无重复字符子串\r\n		ans = max(ans, rk-i+1)\r\n	}\r\n	return ans\r\n}\r\n\r\nfunc max(x, y int) int {\r\n	if x < y {\r\n		return y\r\n	}\r\n	return x\r\n}\r\n\r\nfunc main() {\r\n	ret := lengthOfLongestSubstring(os.Args[1])\r\n	fmt.Printf(\"%d\", ret)\r\n}','{\"message\":\"Accepted\",\"detail\":\"Accepted\",\"memory\":1724416,\"time\":76}',2,2,13,'2024-11-26 14:47:45','2024-11-26 14:48:03',0),(43,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc isPalindrome(x int) bool {\r\n	// 特殊情况：\r\n	// 如上所述，当 x < 0 时，x 不是回文数。\r\n	// 同样地，如果数字的最后一位是 0，为了使该数字为回文，\r\n	// 则其第一位数字也应该是 0\r\n	// 只有 0 满足这一属性\r\n	if x < 0 || (x%10 == 0 && x != 0) {\r\n		return false\r\n	}\r\n\r\n	revertedNumber := 0\r\n	for x > revertedNumber {\r\n		revertedNumber = revertedNumber*10 + x%10\r\n		x /= 10\r\n	}\r\n\r\n	// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。\r\n	// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，\r\n	// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。\r\n	return x == revertedNumber || x == revertedNumber/10\r\n}\r\n\r\nfunc main() {\r\n	a, _ := strconv.Atoi(os.Args[1])\r\n	ret := isPalindrome(a)\r\n	fmt.Printf(\"%v\", ret)\r\n}','{\"message\":\"Accepted\",\"detail\":\"Accepted\",\"memory\":1675264,\"time\":59}',2,3,13,'2024-11-26 14:55:56','2024-11-27 02:41:06',0),(44,'go','package main\r\n\r\nimport (\r\n	\"fmt\"\r\n	\"os\"\r\n	\"strconv\"\r\n)\r\n\r\nfunc isPalindrome(x int) bool {\r\n	// 特殊情况：\r\n	// 如上所述，当 x < 0 时，x 不是回文数。\r\n	// 同样地，如果数字的最后一位是 0，为了使该数字为回文，\r\n	// 则其第一位数字也应该是 0\r\n	// 只有 0 满足这一属性\r\n	if x < 0 || (x%10 == 0 && x != 0) {\r\n		return false\r\n	}\r\n\r\n	revertedNumber := 0\r\n	for x > revertedNumber {\r\n		revertedNumber = revertedNumber*10 + x%10\r\n		x /= 10\r\n	}\r\n\r\n	// 当数字长度为奇数时，我们可以通过 revertedNumber/10 去除处于中位的数字。\r\n	// 例如，当输入为 12321 时，在 while 循环的末尾我们可以得到 x = 12，revertedNumber = 123，\r\n	// 由于处于中位的数字不影响回文（它总是与自己相等），所以我们可以简单地将其去除。\r\n	return x == revertedNumber || x == revertedNumber/10\r\n}\r\n\r\nfunc main() {\r\n	a, _ := strconv.Atoi(os.Args[1])\r\n	ret := isPalindrome(a)\r\n	fmt.Printf(\"%v\", ret)\r\n}','{\"message\":\"Accepted\",\"detail\":\"Accepted\",\"memory\":1527808,\"time\":67}',2,3,13,'2024-11-27 02:41:45','2024-11-27 02:42:04',0);
/*!40000 ALTER TABLE `question_submit` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `user`
--

DROP TABLE IF EXISTS `user`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `user` (
  `id` bigint NOT NULL AUTO_INCREMENT COMMENT 'id',
  `userAccount` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '账号',
  `userPassword` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '密码',
  `unionId` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '微信开放平台id',
  `mpOpenId` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '公众号openId',
  `userName` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '用户昵称',
  `userAvatar` varchar(1024) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '用户头像',
  `userProfile` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci DEFAULT NULL COMMENT '用户简介',
  `gender` tinyint DEFAULT NULL COMMENT '性别',
  `userRole` varchar(256) CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT 'user' COMMENT '用户角色：user/admin/ban',
  `createTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '创建时间',
  `updateTime` datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP COMMENT '更新时间',
  `isDelete` tinyint NOT NULL DEFAULT '0' COMMENT '是否删除',
  PRIMARY KEY (`id`),
  UNIQUE KEY `uni_userAccount` (`userAccount`),
  KEY `idx_unionId` (`unionId`),
  KEY `user_unionId` (`unionId`)
) ENGINE=InnoDB AUTO_INCREMENT=15 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci COMMENT='用户';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `user`
--

LOCK TABLES `user` WRITE;
/*!40000 ALTER TABLE `user` DISABLE KEYS */;
INSERT INTO `user` VALUES (13,'xiaoxiong','$2a$10$8uWOyqPGOyfZYLa1nQHPPev1/E/MGq5FcNElDqDck9CVpZW1xw26q','','','xiaoxiong','','',0,'admin','2024-11-26 07:14:38','2024-11-26 07:15:07',0),(14,'zhangsan','$2a$10$Wy1rqN0IyzaF3QBhoomnGuqd13iuxdO9DqAVQMT3Kor59wJoXARVG','','','zhangsan','','',0,'user','2024-11-27 02:45:15','2024-11-27 02:45:15',0);
/*!40000 ALTER TABLE `user` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2024-11-27  2:53:34
